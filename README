
###
###   Lemur v2.0
###   Books to Prisoners Inventory System
###
###   Tom Wiltzius, tom.wiltzius%gmail.com
###   Oct 2010-2016
###

Python dependencies listed in requirements.txt

Also requires a yarn, webpack, MySQL or sqlite

To run tests:
`./manage.py test`


To run the server locally:
-) sudo apt install -y default-libmysqlclient-dev pkg-config npm python3-docutils python3-levenshtein python3-setuptools mariadb-server
-) sudo npm install --global yarn
-) install client deps with `yarn` in root directory
-) install webpack globally if it isn't with `yarn global add webpack` (webpack 2.5.1 works)
-) Build/watch webpack assets with `./node_modules/webpack/bin/webpack.js` in base project directory
-) pip install -r requirements.txt
-) set up settings_secret.py; use SqlLite database
-) Run `python manage.py migrate` to set up the database tables
-) Run development server with `./manage.py runserver 0.0.0.0:8000`

For mysql/mariadb, to create a user run `sudo mysql` and run this:

```sql
CREATE USER 'username'@'localhost' IDENTIFIED BY 'password';
CREATE DATABASE IF NOT EXISTS lemur;
GRANT ALL PRIVILEGES ON lemur.* TO 'username'@'localhost';
GRANT ALL PRIVILEGES ON test_lemur.* TO 'username'@'localhost';
SHOW GRANTS FOR 'username'@'localhost';
exit
```

To get an SQL prompt as that user: `mysql -u username -p`

Note: if you want to access your local dev server from another computer, add
`ALLOWED_HOSTS = ['192.168.1.37']` to LemurAptana/settings.py (swapping in the
server's IP address or FQDN in place of the example IP address)

To manage the server in production:
-) Various packages need be installed, including: `apt-get install libffi-dev`
-) Use lemur-fcgi.conf in /etc/init/
-) Query service status, restart, etc with `sudo initctl status lemur-fcgi`
-) Rebuild client, run migrations, and restart service with `./production_restart.sh`

For site administration (production or local)
-) Django admin site is located at `/admin`

Machine dependencies:
-) yarn
-) webpack
-) MySQL or sqlite
-) Ability to build python3 lxml from source or install system package (e.g. ubuntu python3-lxml)
-) libssl-dev on Linux

# Updating node dependencies
To see the updates available for node, run the following:

```sh
sudo npm i -g npm-check-updates
ncu -u
```

# Development setup
If you start the application, the database schema will be created automatically, however it will not have all of the data filled out for the application to run. After attempting to run the app once, you'll need to manually insert some records into the database.

If you are using sqlite, you can get a SQL console with `sqlite3 sqlite.db`

## Banner
From an SQL console, run this:

```
INSERT INTO LemurApp_bannermessage(message, handle) VALUES("Banner message goes here", 1);
```

## Admin user
From a shell, run this:

`python manage.py createsuperuser --username=joe --email=joe@example.com`

Ref: https://docs.djangoproject.com/en/5.0/topics/auth/default/#creating-users

After creating the admin user, log in as the admin and create a Facility called "Other". This needs to be the first entry created (or, more specifically, it needs to have a primary key of 1) and it is special cased in the code to force the user to enter the address of an unknown facility. No inmates can be added until at least one facility exists.

# Limitations
Unable to install python dependencies on Debian 11 (10 and 12 are untested). Issue is with compiling
the mysqlclient library. This is likely due to the old version of the python library not working with
the new version of default-libmysqlclient-dev.

```
   _mysql.c: In function ‘_mysql_ConnectionObject_ping’:
    _mysql.c:1911:41: error: ‘MYSQL’ {aka ‘struct st_mysql’} has no member named ‘reconnect’
     1911 |  if ( reconnect != -1 ) self->connection.reconnect = reconnect;
          |                                         ^
```

The most likely immediate path forward here is to try this again with Debian 10, which is still
getting security updates.

The long term solution is going to be to update the version of the mysql python library, which
will likely require updating to a newer version of Django, which will likely cascade into many
other libraries.
